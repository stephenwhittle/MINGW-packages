# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=git
# Marat Radchenko is trying to upstream mingw-w64 patches
# and Johannes Schindelin made a branch of msysgit for it
# Set _based_on_dscho_w64_msysgit to yes to build that.
# Patches that required re-basing for this repository are
# infixed with "-w64-msysgit".
_based_on_dscho_w64_msysgit=no
if [ "${_based_on_dscho_w64_msysgit}" = "yes" ]; then
  SRC_DIR=${_realname}-dscho
  GIT_URL="${SRC_DIR}::git+https://github.com/dscho/git.git#branch=w64-msysgit"
else
  SRC_DIR=${_realname}
  GIT_URL="${SRC_DIR}::git+https://github.com/git/git.git"
fi

pkgbase=mingw-w64-${_realname}-git
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
_ver_base=2.0.0
pkgver=2.0.0.47748.5116f791c1
pkgrel=1
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
url="https://git-scm.com/"
license=('GPL2')

depends=("${MINGW_PACKAGE_PREFIX}-libiconv")
makedepends=('git' ${MINGW_PACKAGE_PREFIX}'-curl' ${MINGW_PACKAGE_PREFIX}'-pcre'  'asciidoc' )

options=(!libtool !strip staticlibs)

source=(${GIT_URL}
git-mingw64-native.patch)
sha256sums=('SKIP'
'SKIP')

pkgver() {
  cd "${srcdir}"/${SRC_DIR}
  printf "%s.%s.%s" "$_ver_base" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  export PYTHON_PATH=/usr/bin/python2
  cd "${srcdir}"/${SRC_DIR}
  git apply ../git-mingw64-native.patch
  autoreconf -fi
}

build() {

  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"

  [ -d build-${CARCH} ] && rm -rf build-${CARCH}
  cp -rf ${SRC_DIR} build-${CARCH}
  cd build-${CARCH}

  ./configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --libexecdir=${MINGW_PREFIX}/lib \
    --with-editor=vim \
    --htmldir=${MINGW_PREFIX}/share/doc/git/html \
    --mandir=${MINGW_PREFIX}/share/man \
    --with-curl=${MINGW_PREFIX} 

  make INSTALLDIRS=vendor -j12 all V=1
  
}

package() {
  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"/build-${CARCH}
  make INSTALLDIRS=vendor DESTDIR="$pkgdir" install-html V=1 && make strip && make INSTALLDIRS=vendor DESTDIR="$pkgdir" install V=1
  
  # bash completion
  mkdir -p "${pkgdir}"/usr/share/bash-completion/completions/
  install -m644 ./contrib/completion/git-completion.bash "${pkgdir}"/usr/share/bash-completion/completions/git
  # fancy git prompt
  mkdir -p "${pkgdir}"/usr/share/git/
  install -m644 ./contrib/completion/git-prompt.sh "${pkgdir}"/usr/share/git/git-prompt.sh
  # subtree installation
  sed "s|libexec/git-core|lib/git-core|" -i contrib/subtree/Makefile
  make -C contrib/subtree prefix=/usr DESTDIR="${pkgdir}" install
  sed "s|libexec/git-core|lib/git-core|" -i contrib/credential/wincred/Makefile
  make -C contrib/credential/wincred prefix=/usr DESTDIR="${pkgdir}" install
  
}
